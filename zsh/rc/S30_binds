
# Who doesn't want home and end to work?
bindkey '\e[1~' beginning-of-line
bindkey '\e[4~' end-of-line

# Incremental search is elite!
bindkey -M vicmd "/" history-incremental-search-backward
bindkey -M vicmd "?" history-incremental-search-forward

# Search based on what you typed in already
bindkey -M vicmd "//" history-beginning-search-backward
bindkey -M vicmd "??" history-beginning-search-forward

# oh wow!  This is killer...  try it!
bindkey -M vicmd "q" push-line

autoload -U up-line-or-beginning-search
zle -N up-line-or-beginning-search

autoload -U down-line-or-beginning-search
zle -N down-line-or-beginning-search

# Ensure that arrow keys work as they should
bindkey '\e[A' up-line-or-beginning-search
bindkey '\e[B' down-line-or-beginning-search

bindkey '\eOA' up-line-or-beginning-search
bindkey '\eOB' down-line-or-beginning-search

bindkey '\e[C' forward-char
bindkey '\e[D' backward-char

bindkey '\eOC' forward-char
bindkey '\eOD' backward-char

bindkey -M viins 'jk' vi-cmd-mode
bindkey -M vicmd 'u' undo

# Rebind the insert key.  I really can't stand what it currently does.
bindkey '\e[2~' overwrite-mode

# Rebind the delete key. Again, useless.
bindkey '\e[3~' delete-char

bindkey -M vicmd '!' edit-command-output

bindkey -M viins '\C-i' complete-word

# it's like, space AND completion.  Gnarlbot.
bindkey -M viins ' ' magic-space

# gross.  Makes Meta-' write '\'' for you
bindkey -s \\e\' \'\\\\\'\'

# make _ work like 0 (vimish)
bindkey -a _ beginning-of-line

bindkey -M vicmd '~' vi-swap-case

bindkey -M vicmd '\C-t' transpose-words

autoload -U select-word-style
autoload -U forward-word-match
autoload -U backward-word-match

zstyle ':zle:*-word-shell' word-style shell

zle -N forward-word-shell forward-word-match
zle -N backward-word-shell backward-word-match

bindkey -M vicmd '^w' forward-word-shell
bindkey -M vicmd '^b' backward-word-shell

# vim: ft=zsh
