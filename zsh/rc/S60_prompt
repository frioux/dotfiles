setopt prompt_subst
autoload colors
colors

autoload -Uz vcs_info
host_color=cyan
zam_color=yellow
user_color=green
root_color=red
directory_color=magenta
error_color=red
jobs_color=green
vcs_color=blue

host_prompt="%{$fg_bold[$host_color]%}%M%{$reset_color%}"

jobs_prompt1="%{$fg_bold[$jobs_color]%}(%{$reset_color%}"
jobs_prompt2="%{$fg[$jobs_color]%}%j%{$reset_color%}"
jobs_prompt3="%{$fg_bold[$jobs_color]%})%{$reset_color%}"

jobs_total="%(1j.${jobs_prompt1}${jobs_prompt2}${jobs_prompt3} .)"

zam_prompt1="%{$fg_bold[$zam_color]%}[%{$reset_color%}"
zam_prompt3="%{$fg_bold[$zam_color]%}]%{$reset_color%}"

zam_total="${zam_prompt1}\${zam_prompt2}${zam_prompt3}"

error_prompt1="%{$fg_bold[$error_color]%}<%{$reset_color%}"
error_prompt2="%{$fg[$error_color]%}%?%{$reset_color%}"
error_prompt3="%{$fg_bold[$error_color]%}>%{$reset_color%}"

error_total="%(?..${error_prompt1}${error_prompt2}${error_prompt3} )"

directory_prompt="%{$fg[$directory_color]%}%~%{$reset_color%} "

# set formats
# %b - branchname
# %u - unstagedstr (see below)
# %c - stangedstr (see below)
# %a - action (e.g. rebase-i)
# %R - repository path
# %S - path in the repository
fmt_branch="%b%{$fg_bold[yellow]%}%{$reset_color%}%u%{$fg_bold[green]%}%c%{$reset_color%}" # e.g. masterÂ¹Â²
fmt_action="(%{$fg[red]%}%a%{$reset_color%})"   # e.g. (rebase-i)
fmt_pre="%{$fg_bold[$vcs_color]%}Â«%{$reset_color%}%{$fg[$vcs_color]%}"
fmt_post="%{$fg_bold[$vcs_color]%}Â»%{$reset_color%}"

# check-for-changes can be really slow.
# you should disable it, if you work with large repositories
zstyle ':vcs_info:*:prompt:*' check-for-changes true
zstyle ':vcs_info:*:prompt:*' unstagedstr 'Â¹'  # display Â¹ if there are unstaged changes
zstyle ':vcs_info:*:prompt:*' stagedstr 'Â²'    # display Â² if there are staged changes
zstyle ':vcs_info:*:prompt:*' actionformats "${fmt_pre}${fmt_branch}${fmt_action}${fmt_post} "
zstyle ':vcs_info:*:prompt:*' formats       "${fmt_pre}${fmt_branch}${fmt_post} "
zstyle ':vcs_info:*:prompt:*' nvcsformats   ""
zstyle ':vcs_info:*:prompt:*' enable git

function precmd {
   vcs_info 'prompt'

   if [ -e ~/.zam/zam_account_role ]; then
      zam_prompt2="%{$fg[$zam_color]%}$(cat ~/.zam/zam_account)%{$reset_color%}%{$fg_bold[$zam_color]%}/%{$reset_color%}%{$fg[$zam_color]%}$(cat ~/.zam/zam_role)%{$reset_color%}"
   fi
}

vcs='$vcs_info_msg_0_'
memento_mori="%{$fg_bold[white]%}ðŸ’€ \$(clock)%{$reset_color%}"

function lprompt {
  local vimode='${PR_VIMODE}'
  local vicol='${PR_VICOLOR}'

  PROMPT="${host_prompt} $memento_mori ${jobs_total}${zam_total} ${directory_prompt}${vcs}${error_total}
%{${vicol}%}${vimode}%{$reset_color%} "
}

lprompt

PR_VIMODE='$'
PR_VICOLOR="$fg_bold[green]"
function zle-line-init zle-keymap-select {
  PR_VIMODE="${${KEYMAP/vicmd/Â¢}/(main|viins)/$}"
  PR_VICOLOR="${${KEYMAP/vicmd/$fg_bold[red]}/(main|viins)/$fg_bold[green]}"
  zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select

# vim: ft=zsh
